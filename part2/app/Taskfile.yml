version: '3'

tasks:
  up:
    cmds:
      - docker compose up -d
    desc: 実行環境の立ち上げ

  feed:
    cmds:
      - docker compose exec feeder-master-db ./feed_dump_to_elasticsearch.py
    desc: Elasticsearchへのデータ投入

  collect-keyword-sets:
    cmds:
      - docker compose exec workspace sh -c "bzcat simplewiki-202109-pages-with-pageviews-20211001.bz2 | cut -f2 | shuf -n 4000 --random-source=simplewiki-202109-pages-with-pageviews-20211001.bz2 > hands_on_keyword_set.txt"
    desc: 検索キーワードセットを収集する
  
  cut-keywords:
    cmds: 
      - docker compose exec workspace sh -c "cat hands_on_keyword_set.txt | awk 'NR==1,NR==500 {print}' > hands_on_keyword_set.txt.test"
      - docker compose exec workspace sh -c "cat hands_on_keyword_set.txt | awk 'NR==501,NR==3500 {print}' > hands_on_keyword_set.txt.training"
      - docker compose exec workspace sh -c "cat hands_on_keyword_set.txt | awk 'NR==3501,NR==4000 {print}' > hands_on_keyword_set.txt.validation"
    desc: テスト・訓練・検証用のの検索キーワードセットをそれぞれ切り出す

  calc-relevant-default:
    cmds: 
      - docker compose exec workspace ./collect_responses.py baseline baseline.txt hands_on_keyword_set.txt.test
    desc: ESのテストデータから関連度を付与する

  calc-ndcg-default:
    cmds: 
      - docker compose exec workspace ./calc_ndcg.py baseline.txt
    desc: オフライン評価を行う

  create-feature-index:
    cmds:
      - docker compose exec workspace curl -X PUT -w '\n' "http://search-engine:9200/_ltr"
    desc: 特徴量インデックスを作成する

  delete-feature-index:
    cmds:
      - docker compose exec workspace curl -X DELETE -w '\n' "http://search-engine:9200/_ltr"
    desc: 特徴量インデックスを作成する

  deploy-featureset:
    cmds:
      - "docker compose exec workspace curl -X POST -w '\n' -H 'Content-Type: application/json' -d @hands_on_featureset.json \"http://search-engine:9200/_ltr/_featureset/hands_on_featureset.json\""
    desc: 特徴量セットをデプロイする

  collect-feature-data:
    cmds: 
      - docker compose exec workspace ./collect_responses.py feature hands_on_featuredata.txt.training hands_on_keyword_set.txt.training
       - docker compose exec workspace ./collect_responses.py feature hands_on_featuredata.txt.validation hands_on_keyword_set.txt.validation
    desc: 訓練・検証データを作成する

  create-ranking-model:
    cmds:
      - docker compose exec workspace ./generate_model.py
    desc: ランキングモデルを作成する
     
  deploy-ranking-model:
    cmds:
      - "docker compose exec workspace curl -X POST -w '\n' -H 'Content-Type: application/json' -d @hands_on_model.json \"http://search-engine:9200/_ltr/_featureset/hands_on_featureset.json/_createmodel\""
    desc: ランキングモデルをelastic searchへデプロイする

  sample-query-rescorer:
    cmds:
      - docker compose exec workspace curl 'http://localhost:9200/_search?pretty' -X GET -H "Content-Type:application/json" --data-binary @data/query/rescore.json
    desc: query rescorerの検証

  calc-relevant-ranking-model:
    cmds:
      - docker compose exec workspace ./collect_responses.py mlr mlr.txt hands_on_keyword_set.txt.test
    desc: ランキングモデルを使った検索結果の関連度を計算する

  calc-ndcg-ranking-model:
    cmds: 
      - docker compose exec workspace ./calc_ndcg.py mlr.txt
    desc: ランキングモデルを使った検索結果のオフライン評価を行う

  calc-ndcg:
    cmds: 
      - task calc-ndcg-default
      - task calc-ndcg-ranking-model
    desc: オフライン評価